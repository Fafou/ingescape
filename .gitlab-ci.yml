# Gitlab ci

# TODO Check why with install target windows api are in bin subfolder
# TODO Check why with compile target zmq, ... are not copied in Release folder on windows
# TODO Add job to deploy ingescape website on commit (Can filter to launch job on doc folder changes and only master git's branche)
# TODO Add job to compile ingeprobe
# TODO Add job to package bindings

# Define job order
stages:
  - build-lib
  - installer-lib
  - build-binding
  - installer-binding
  - build-apps
  - installer-apps
  - deploy-lib
  - delivery-lib
  - delivery-apps

# Define ingescape library files
.build-lib-files: &build-lib-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
      - CMakeLists.txt
    refs:
      - master

# Define csharp binding files
.build-csharp-files: &build-csharp-files
  only:
    changes:
      - .gitlab-ci.yml
      - bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/**/*
    refs:
      - master

# Define ingescape editor files
.build-editor-files: &build-editor-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
      - editor/frameworks/**/*
      - editor/apps/IngeScape-Common/**/*
      - editor/apps/IngeScape-Editor/**/*
    refs:
      - master

# Define ingescape assessments files
.build-assessments-files: &build-assessments-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
      - editor/frameworks/**/*
      - editor/apps/IngeScape-Common/**/*
      - editor/apps/IngeScape-Assessments/**/*
    refs:
      - master

# Define ingescape expe files
.build-expe-files: &build-expe-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
      - editor/frameworks/**/*
      - editor/apps/IngeScape-Common/**/*
      - editor/apps/IngeScape-Expe/**/*
    refs:
      - master

# Create ingescape library for linux (x86_64)
lib-linux-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-linux-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for Debian 9 (x86_64)
lib-debian-9-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/debian-9-with-zyre
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-debian-9-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for Debian 10 (x86_64)
lib-debian-10-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/debian-10-with-zyre
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-debian-10-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for CentOS 7 (x86_64)
lib-centos-7-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/centos-7-with-zyre
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-centos-7-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for linux (armv7/armhf)
lib-linux-release-armhf:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-rpi
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/toolchain.cmake
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-linux-release-armhf"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for Raspbian 9 (armv7/armhf)
lib-raspbian-9-release-armhf:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-rpi
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/toolchain.cmake
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-raspbian-9-release-armhf"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for Android (armv7a softfp)
lib-android-release-armv7a-softfp:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-android
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/${ANDROID_NDK_TOOLCHAIN_FILE}
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-android-release-armv7a-softfp"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for macos
lib-macos-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-macos-release-x64"
    expire_in: 1 week
  dependencies: []

binding-csharp-windows-x64:
  <<: *build-csharp-files
  stage: build-binding
  tags:
    - windows
    - "1"
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - cmake -S bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/ -B bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release
    - Powershell.exe -executionpolicy remotesigned bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/FixCmakeSolution.ps1 -buildFolder bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build
    - cmake --build bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build --target IngescapeCSharp --config Release
  artifacts:
    paths:
     - bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build
    name: "binding-csharp-windows-x64"
    expire_in: 1 week
  dependencies: []

binding-csharp-windows-x86:
  <<: *build-csharp-files
  stage: build-binding
  tags:
    - windows
    - "1"
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - cmake -S bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/ -B bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release
    - Powershell.exe -executionpolicy remotesigned bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/FixCmakeSolution.ps1 -buildFolder bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build
    - cmake --build bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build --target IngescapeCSharp --config Release
  artifacts:
    paths:
     - bindings/c#/IngescapeCSharpWrapper/IngescapeCSharp/build
    name: "binding-csharp-windows-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape editor for macos
editor-macos-release-x64:
  <<: *build-editor-files
  stage: build-apps
  variables:
    Qt5_DIR: ~/Qt/5.9.7/clang_64/lib/cmake/Qt5
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir editor/apps/IngeScape-Editor/build
    - cmake -S editor/apps/IngeScape-Editor/ -B editor/apps/IngeScape-Editor/build -DCMAKE_BUILD_TYPE=Release
    - make -C editor/apps/IngeScape-Editor/build
  artifacts:
    paths:
      - editor/apps/IngeScape-Editor/build
    name: "editor-macos-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape assessments for macos
assessments-macos-release-x64:
  <<: *build-assessments-files
  stage: build-apps
  variables:
    Qt5_DIR: ~/Qt/5.9.7/clang_64/lib/cmake/Qt5
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir editor/apps/IngeScape-Assessments/build
    - cmake -S editor/apps/IngeScape-Assessments/ -B editor/apps/IngeScape-Assessments/build -DCMAKE_BUILD_TYPE=Release
    - make -C editor/apps/IngeScape-Assessments/build
  artifacts:
    paths:
      - editor/apps/IngeScape-Assessments/build
    name: "assessments-macos-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape expe for macos
expe-macos-release-x64:
  <<: *build-expe-files
  stage: build-apps
  variables:
    Qt5_DIR: ~/Qt/5.9.7/clang_64/lib/cmake/Qt5
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir editor/apps/IngeScape-Expe/build
    - cmake -S editor/apps/IngeScape-Expe/ -B editor/apps/IngeScape-Expe/build -DCMAKE_BUILD_TYPE=Release
    - make -C editor/apps/IngeScape-Expe/build
  artifacts:
    paths:
      - editor/apps/IngeScape-Expe/build
    name: "expe-macos-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 64 bits release
lib-windows-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
    - "1"
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\ReleaseX64
    - cmake -S . -B build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release -DINGESCAPE_BUILD_STATIC=OFF
    - cmake --build build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
     - build
    name: "lib-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 32 bits release
lib-windows-release-x86:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
    - "2"
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\ReleaseX86
    - cmake -S . -B build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release -DINGESCAPE_BUILD_STATIC=OFF
    - cmake --build build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
     - build
    name: "lib-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 64 bits debug
lib-windows-debug-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
    - "1"
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Debug\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\DebugX64
    - cmake -S . -B build\DebugX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Debug -DINGESCAPE_BUILD_STATIC=OFF
    - cmake --build build\DebugX64 --target ALL_BUILD --config Debug
  artifacts:
    paths:
     - build
    name: "lib-windows-debug-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 32 bits debug
lib-windows-debug-x86:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
    - "2"
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Debug\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\DebugX86
    - cmake -S . -B build\DebugX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Debug -DINGESCAPE_BUILD_STATIC=OFF
    - cmake --build build\DebugX86 --target ALL_BUILD --config Debug
  artifacts:
    paths:
     - build
    name: "lib-windows-debug-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape editor for windows
editor-windows-release-x86:
  <<: *build-editor-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015\\lib\\cmake\\Qt5
  tags:
    - windows
    - "2"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Editor\build\ReleaseX86
    - cmake editor\apps\IngeScape-Editor\ -B editor\apps\IngeScape-Editor\build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release
    - cmake --build editor\apps\IngeScape-Editor\build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build
    name: "editor-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape editor for windows
editor-windows-release-x64:
  <<: *build-editor-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015_64\\lib\\cmake\\Qt5
  tags:
    - windows
    - "1"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Editor\build\ReleaseX64
    - cmake editor\apps\IngeScape-Editor\ -B editor\apps\IngeScape-Editor\build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release
    - cmake --build editor\apps\IngeScape-Editor\build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build
    name: "editor-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape assessments for windows
assessments-windows-release-x86:
  <<: *build-assessments-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015\\lib\\cmake\\Qt5
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - windows
    - "2"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Assessments\build\ReleaseX86
    - cmake editor\apps\IngeScape-Assessments\ -B editor\apps\IngeScape-Assessments\build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release
    - cmake --build editor\apps\IngeScape-Assessments\build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build
    name: "assessments-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape assessments for windows
assessments-windows-release-x64:
  <<: *build-assessments-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015_64\\lib\\cmake\\Qt5
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - windows
    - "1"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Assessments\build\ReleaseX64
    - cmake editor\apps\IngeScape-Assessments\ -B editor\apps\IngeScape-Assessments\build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release
    - cmake --build editor\apps\IngeScape-Assessments\build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build
    name: "assessments-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape expe for windows (x86)
expe-windows-release-x86:
  <<: *build-expe-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015\\lib\\cmake\\Qt5
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - windows
    - "2"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Expe\build\ReleaseX86
    - cmake editor\apps\IngeScape-Expe\ -B editor\apps\IngeScape-Expe\build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release
    - cmake --build editor\apps\IngeScape-Expe\build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Expe\build
    name: "expe-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape expe for windows (x64)
expe-windows-release-x64:
  <<: *build-expe-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015_64\\lib\\cmake\\Qt5
    GIT_SUBMODULE_STRATEGY: recursive
  tags:
    - windows
    - "1"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Expe\build\ReleaseX64
    - cmake editor\apps\IngeScape-Expe\ -B editor\apps\IngeScape-Expe\build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release
    - cmake --build editor\apps\IngeScape-Expe\build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Expe\build
    name: "expe-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create runtime install for windows 32 bits
lib-installer-runtime-windows-x86:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - windows
    - "2"
  script:
    - cd build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..
  artifacts:
    paths:
      - build\ReleaseX86\ingescape-*.exe
      - build\ReleaseX86\ingescape-*.zip
    name: "lib-installer-runtime-windows-x86"
  dependencies:
    - lib-windows-release-x86

# Create runtime install for windows 64 bits
lib-installer-runtime-windows-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - windows
    - "1"
  script:
    - cd build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..
  artifacts:
    paths:
      - build\ReleaseX64\ingescape-*.exe
      - build\ReleaseX64\ingescape-*.zip
    name: "lib-installer-runtime-windows-x64"
  dependencies:
    - lib-windows-release-x64

# Create runtime install for macos 64 bits
lib-installer-runtime-macos-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - osx
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i '' 's/DARWIN_PACKAGE_FILE_NAME=.*/DARWIN_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build macos_x64
  artifacts:
    paths:
      - macos_x64/ingescape-*
      - macos_x64/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-macos-x64"
  dependencies:
    - lib-macos-release-x64

# Create runtime install for windows 64 bits
binding-csharp-installer-windows-x64:
  <<: *build-csharp-files
  stage: installer-binding
  tags:
    - windows
    - "1"
  script:
    - cd bindings\c#\IngescapeCSharpWrapper\IngescapeCSharp\build && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - bindings\c#\IngescapeCSharpWrapper\IngescapeCSharp\build\IngescapeCSharp-*.exe
      - bindings\c#\IngescapeCSharpWrapper\IngescapeCSharp\build\IngescapeCSharp-*.zip
    name: "binding-csharp-installer-windows-x64"
  dependencies:
    - binding-csharp-windows-x64

# Create runtime install for windows 32 bits
binding-csharp-installer-windows-x86:
  <<: *build-csharp-files
  stage: installer-binding
  tags:
    - windows
    - "1"
  script:
    - cd bindings\c#\IngescapeCSharpWrapper\IngescapeCSharp\build && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - bindings\c#\IngescapeCSharpWrapper\IngescapeCSharp\build\IngescapeCSharp-*.exe
      - bindings\c#\IngescapeCSharpWrapper\IngescapeCSharp\build\IngescapeCSharp-*.zip
    name: "binding-csharp-installer-windows-x86"
  dependencies:
    - binding-csharp-windows-x86

# Create editor install for macos 64 bits
editor-installer-macos-x64:
  <<: *build-editor-files
  stage: installer-apps
  tags:
    - osx
  script:
    - make -C editor/apps/IngeScape-Editor/build package
  #  - make -C editor/apps/IngeScape-Editor/build package_source
  artifacts:
    paths:
      - editor/apps/IngeScape-Editor/build/IngeScape-Editor-*
    name: "editor-installer-macos-x64"
  dependencies:
    - editor-macos-release-x64

# Create editor install for windows 32 bits
editor-installer-windows-x86:
  <<: *build-editor-files
  stage: installer-apps
  tags:
    - windows
    - "2"
  script:
    - cd editor\apps\IngeScape-Editor\build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build\ReleaseX86\IngeScape-Editor-*
    name: "editor-installer-windows-x86"
  dependencies:
    - editor-windows-release-x86

# Create editor install for windows 64 bits
editor-installer-windows-x64:
  <<: *build-editor-files
  stage: installer-apps
  tags:
    - windows
    - "1"
  script:
    - cd editor\apps\IngeScape-Editor\build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build\ReleaseX64\IngeScape-Editor-*
    name: "editor-installer-windows-x64"
  dependencies:
    - editor-windows-release-x64

# Create assessments install for macos 64 bits
assessments-installer-macos-x64:
  <<: *build-assessments-files
  stage: installer-apps
  tags:
    - osx
  script:
    - make -C editor/apps/IngeScape-Assessments/build package
  #  - make -C editor/apps/IngeScape-Assessments/build package_source
  artifacts:
    paths:
      - editor/apps/IngeScape-Assessments/build/IngeScape-Assessments-*
    name: "assessments-installer-macos-x64"
  dependencies:
    - assessments-macos-release-x64

# Create assessments install for windows 32 bits
assessments-installer-windows-x86:
  <<: *build-assessments-files
  stage: installer-apps
  tags:
    - windows
    - "2"
  script:
    - cd editor\apps\IngeScape-Assessments\build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build\ReleaseX86\IngeScape-Assessments-*
    name: "assessments-installer-windows-x86"
  dependencies:
    - assessments-windows-release-x86

# Create assessments install for windows 64 bits
assessments-installer-windows-x64:
  <<: *build-assessments-files
  stage: installer-apps
  tags:
    - windows
    - "1"
  script:
    - cd editor\apps\IngeScape-Assessments\build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build\ReleaseX64\IngeScape-Assessments-*
    name: "assessments-installer-windows-x64"
  dependencies:
    - assessments-windows-release-x64

# Create expe install for macos 64 bits
expe-installer-macos-x64:
  <<: *build-expe-files
  stage: installer-apps
  tags:
    - osx
  script:
    - make -C editor/apps/IngeScape-Expe/build package
  #  - make -C editor/apps/IngeScape-Expe/build package_source
  artifacts:
    paths:
      - editor/apps/IngeScape-Expe/build/IngeScape-Expe-*
    name: "expe-installer-macos-x64"
  dependencies:
    - expe-macos-release-x64

# Create expe install for windows 32 bits
expe-installer-windows-x86:
  <<: *build-expe-files
  stage: installer-apps
  tags:
    - windows
    - "2"
  script:
    - cd editor\apps\IngeScape-Expe\build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Expe\build\ReleaseX86\IngeScape-Expe-*
    name: "expe-installer-windows-x86"
  dependencies:
    - expe-windows-release-x86

# Create expe install for windows 64 bits
expe-installer-windows-x64:
  <<: *build-expe-files
  stage: installer-apps
  tags:
    - windows
    - "1"
  script:
    - cd editor\apps\IngeScape-Expe\build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Expe\build\ReleaseX64\IngeScape-Expe-*
    name: "expe-installer-windows-x64"
  dependencies:
    - expe-windows-release-x64

# Create runtime install for linux 64 bits - Generic ZIP
lib-installer-runtime-linux-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build linux_x64
  artifacts:
    paths:
      - linux_x64/ingescape-*
      - linux_x64/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-linux-x64"
  dependencies:
    - lib-linux-release-x64

# Create runtime install for linux 64 bits - Debian 9 (stretch)
lib-installer-runtime-debian-9-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-9-with-zyre
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build debian9_x64
  artifacts:
    paths:
      - debian9_x64/ingescape-*
      - debian9_x64/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-debian-9-x64"
  dependencies:
    - lib-debian-9-release-x64

# Create runtime install for linux 64 bits - Debian 10 (buster)
lib-installer-runtime-debian-10-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-10-with-zyre
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build debian10_x64
  artifacts:
    paths:
      - debian10_x64/ingescape-*
      - debian10_x64/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-debian-10-x64"
  dependencies:
    - lib-debian-10-release-x64

# Create runtime install for linux 64 bits - CentOS
lib-installer-runtime-centos-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/centos-7-with-zyre
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build centos7_x64
  artifacts:
    paths:
      - centos7_x64/ingescape-*
      - centos7_x64/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-centos-x64"
  dependencies:
    - lib-centos-7-release-x64

# Create runtime install for linux ARMv7 (armhf) - Generic ZIP
lib-installer-runtime-linux-armhf:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-rpi
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build linux_armhf
  artifacts:
    paths:
      - linux_armhf/ingescape-*
      - linux_armhf/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-linux-armhf"
  dependencies:
    - lib-linux-release-armhf

# Create runtime install for linux ARMv7 (armhf) - Raspbian 9 (stretch)
lib-installer-runtime-raspbian-9-armhf:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-rpi
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
    - mv build raspbian9_armhf
  artifacts:
    paths:
      - raspbian9_armhf/ingescape-*
      - raspbian9_armhf/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-raspbian-9-armhf"
  dependencies:
    - lib-raspbian-9-release-armhf

# Create runtime install for Android (armv7a softfp) - Generic ZIP
lib-installer-runtime-android-armv7a-softfp:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-android
  script:
    - make -C build package
    - mv build android
  artifacts:
    paths:
      - android/ingescape-*
    name: "lib-installer-runtime-android-armv7a-softfp"
  dependencies:
    - lib-android-release-armv7a-softfp

# Deploy ingescape in mac os X to be able to compile agents
lib-deploy-macos-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - osx
  script:
    - make -C build install DESTDIR=~/builds/release/x64
    - cp src/include/ingescape_private.h ~/builds/release/x64/usr/local/include/ingescape/
  dependencies:
    - lib-macos-release-x64

# Deploy ingescape in linux to be able to compile agents
lib-deploy-linux-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - make -C build install DESTDIR=~/builds/release/linux_x64
    - cp src/include/ingescape_private.h ~/builds/release/linux_x64/usr/local/include/ingescape/
  dependencies:
    - lib-linux-release-x64

# Deploy ingescape in linux to be able to compile agents
lib-deploy-debian-9-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - docker
  image: ingescape/debian-9-with-zyre
  script:
    - make -C build install DESTDIR=~/builds/release/debian9
    - cp src/include/ingescape_private.h ~/builds/release/debian9/usr/local/include/ingescape/
  dependencies:
    - lib-debian-9-release-x64

# Deploy ingescape in linux to be able to compile agents
lib-deploy-debian-10-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - docker
  image: ingescape/debian-10-with-zyre
  script:
    - make -C build install DESTDIR=~/builds/release/debian10
    - cp src/include/ingescape_private.h ~/builds/release/debian10/usr/local/include/ingescape/
  dependencies:
    - lib-debian-10-release-x64

# Deploy ingescape in linux to be able to compile agents
lib-deploy-centos-7-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - docker
  image: ingescape/centos-7-with-zyre
  script:
    - make -C build install DESTDIR=~/builds/release/centos7
    - cp src/include/ingescape_private.h ~/builds/release/centos7/usr/local/include/ingescape/
  dependencies:
    - lib-centos-7-release-x64

# Deploy ingescape in linux to be able to compile agents
lib-deploy-linux-release-armhf:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - docker
  image: ingescape/ubuntu-x-compil-rpi
  script:
    - make -C build install DESTDIR=~/builds/release/armhf
    - cp src/include/ingescape_private.h ~/builds/release/armhf/usr/local/include/ingescape/
  dependencies:
    - lib-linux-release-armhf

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\ReleaseX64\Release\* C:\Users\admin\dev\Builds\Release\x64\
  dependencies:
    - lib-windows-release-x64

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-release-x86:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\ReleaseX86\Release\* C:\Users\admin\dev\Builds\Release\x86\
  dependencies:
    - lib-windows-release-x86

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-debug-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\DebugX64\Debug\* C:\Users\admin\dev\Builds\Debug\x64\
  dependencies:
    - lib-windows-debug-x64

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-debug-x86:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\DebugX86\Debug\* C:\Users\admin\dev\Builds\Debug\x86\
  dependencies:
    - lib-windows-debug-x86

# Deliver installers so they can be downloaded from the website
lib-delivery-all:
  <<: *build-lib-files
  stage: delivery-lib
  tags:
    - docker
  image: ingescape/alpine-deployment
  script:
    - echo "Setting up SSH"
    - mkdir -p ~/.ssh/
    - echo ${SSH_KNOWN_HOSTS} | base64 -d >> ~/.ssh/known_hosts
    - umask 077
    - echo ${SSH_SECRET} | base64 -d > ssh_secret
    - umask 022
    - echo "Deliver Windows x86"
    - mkdir --parents library/win32
    - mv build/ReleaseX86/ingescape-*
         library/win32/
    - ls library/win32/ | grep -v 'latest_delivery' > library/win32/latest_delivery
    - echo "Deliver Windows x64"
    - mkdir --parents library/win64
    - mv build/ReleaseX64/ingescape-*
         library/win64/
    - ls library/win64/ | grep -v 'latest_delivery' > library/win64/latest_delivery
    - echo "Deliver MacOS x64"
    - mkdir --parents library/macos
    - mv macos_x64/ingescape-*
         macos_x64/installIngescapeAndDependencies.sh
         library/macos/
    - ls library/macos/ | grep -v 'latest_delivery' > library/macos/latest_delivery
    - echo "Deliver generic Linux x64"
    - mkdir --parents library/linux_x64/
    - mv linux_x64/ingescape-*
         linux_x64/installIngescapeAndDependencies.sh
         library/linux_x64/
    - ls library/linux_x64/ | grep -v 'latest_delivery' > library/linux_x64/latest_delivery
    - echo "Deliver Debian 9 x64"
    - mkdir --parents library/debian9/
    - mv debian9_x64/ingescape-*
         debian9_x64/installIngescapeAndDependencies.sh
         library/debian9/
    - ls library/debian9/ | grep -v 'latest_delivery' > library/debian9/latest_delivery
    - echo "Deliver Debian 10 x64"
    - mkdir --parents library/debian10/
    - mv debian10_x64/ingescape-*
         debian10_x64/installIngescapeAndDependencies.sh
         library/debian10/
    - ls library/debian10/ | grep -v 'latest_delivery' > library/debian10/latest_delivery
    - echo "Deliver CentOS 7 x64"
    - mkdir --parents library/centos7
    - mv centos7_x64/ingescape-*
         centos7_x64/installIngescapeAndDependencies.sh
         library/centos7/
    - ls library/centos7/ | grep -v 'latest_delivery' > library/centos7/latest_delivery
    - echo "Deliver generic Linux armhf"
    - mkdir --parents library/linux_armhf
    - mv linux_armhf/ingescape-*
         linux_armhf/installIngescapeAndDependencies.sh
         library/linux_armhf/
    - ls library/linux_armhf/ | grep -v 'latest_delivery' > library/linux_armhf/latest_delivery
    - echo "Deliver Raspbian 9 armhf"
    - mkdir --parents library/raspbian9
    - mv raspbian9_armhf/ingescape-*
         raspbian9_armhf/installIngescapeAndDependencies.sh
         library/raspbian9/
    - ls library/raspbian9/ | grep -v 'latest_delivery' > library/raspbian9/latest_delivery
    - echo "Deliver Android armv7a (softfp)"
    - mkdir --parents library/android
    - mv android/ingescape-*
         library/android/
    - ls library/android/ | grep -v 'latest_delivery' > library/android/latest_delivery
    - echo "Synchronization"
    - rsync --rsh="ssh -i ssh_secret" --recursive library ${DELIVERY_USER}@${DELIVERY_HOST}:${DELIVERY_DESTINATION}
  dependencies:
    - lib-installer-runtime-windows-x86
    - lib-installer-runtime-windows-x64
    - lib-installer-runtime-macos-x64
    - lib-installer-runtime-linux-x64
    - lib-installer-runtime-debian-9-x64
    - lib-installer-runtime-debian-10-x64
    - lib-installer-runtime-centos-x64
    - lib-installer-runtime-linux-armhf
    - lib-installer-runtime-raspbian-9-armhf
    - lib-installer-runtime-android-armv7a-softfp

# Deliver installers so they can be downloaded from the website
editor-delivery-all:
  <<: *build-editor-files
  stage: delivery-apps
  tags:
    - docker
  image: ingescape/alpine-deployment
  script:
    - echo "Setting up SSH"
    - mkdir -p ~/.ssh/
    - echo ${SSH_KNOWN_HOSTS} | base64 -d >> ~/.ssh/known_hosts
    - umask 077
    - echo ${SSH_SECRET} | base64 -d > ssh_secret
    - umask 022
    - mv editor _editor
    - echo "Deliver Mac OS x64 editor"
    - mkdir --parents editor/macos
    - mv _editor/apps/IngeScape-Editor/build/IngeScape-Editor-*
         editor/macos/
    - ls editor/macos/ | grep -v 'latest_delivery' > editor/macos/latest_delivery
    - echo "Deliver Windows x86 editor"
    - mkdir --parents editor/win32
    - mv _editor/apps/IngeScape-Editor/build/ReleaseX86/IngeScape-Editor-*
         editor/win32/
    - ls editor/win32/ | grep -v 'latest_delivery' > editor/win32/latest_delivery
    - echo "Deliver Windows x64 editor"
    - mkdir --parents editor/win64
    - mv _editor/apps/IngeScape-Editor/build/ReleaseX64/IngeScape-Editor-*
         editor/win64/
    - ls editor/win64/ | grep -v 'latest_delivery' > editor/win64/latest_delivery
    - echo "Synchronization"
    - rsync --rsh="ssh -i ssh_secret" --recursive editor ${DELIVERY_USER}@${DELIVERY_HOST}:${DELIVERY_DESTINATION}
  dependencies:
    - editor-installer-macos-x64
    - editor-installer-windows-x86
    - editor-installer-windows-x64

# Deliver installers so they can be downloaded from the website
assessments-delivery-all:
  <<: *build-assessments-files
  stage: delivery-apps
  tags:
    - docker
  image: ingescape/alpine-deployment
  script:
    - echo "Setting up SSH"
    - mkdir -p ~/.ssh/
    - echo ${SSH_KNOWN_HOSTS} | base64 -d >> ~/.ssh/known_hosts
    - umask 077
    - echo ${SSH_SECRET} | base64 -d > ssh_secret
    - umask 022
    - mv editor _editor
    - echo "Deliver Mac OS x64 assessments"
    - mkdir --parents assessments/macos
    - mv _editor/apps/IngeScape-Assessments/build/IngeScape-Assessments-*
         assessments/macos/
    - ls assessments/macos/ | grep -v 'latest_delivery' > assessments/macos/latest_delivery
    - echo "Deliver Windows x86 assessments"
    - mkdir --parents assessments/win32
    - mv _editor/apps/IngeScape-Assessments/build/ReleaseX86/IngeScape-Assessments-*
         assessments/win32/
    - ls assessments/win32/ | grep -v 'latest_delivery' > assessments/win32/latest_delivery
    - echo "Deliver Windows x64 assessments"
    - mkdir --parents assessments/win64
    - mv _editor/apps/IngeScape-Assessments/build/ReleaseX64/IngeScape-Assessments-*
         assessments/win64/
    - ls assessments/win64/ | grep -v 'latest_delivery' > assessments/win64/latest_delivery
    - echo "Synchronization"
    - rsync --rsh="ssh -i ssh_secret" --recursive assessments ${DELIVERY_USER}@${DELIVERY_HOST}:${DELIVERY_DESTINATION}
  dependencies:
    - assessments-installer-macos-x64
    - assessments-installer-windows-x86
    - assessments-installer-windows-x64

# Deliver installers so they can be downloaded from the website
expe-delivery-all:
  <<: *build-expe-files
  stage: delivery-apps
  tags:
    - docker
  image: ingescape/alpine-deployment
  script:
    - echo "Setting up SSH"
    - mkdir -p ~/.ssh/
    - echo ${SSH_KNOWN_HOSTS} | base64 -d >> ~/.ssh/known_hosts
    - umask 077
    - echo ${SSH_SECRET} | base64 -d > ssh_secret
    - umask 022
    - mv editor _editor
    - echo "Deliver Mac OS x64 expe"
    - mkdir --parents expe/macos
    - mv _editor/apps/IngeScape-Expe/build/IngeScape-Expe-*
         expe/macos/
    - ls expe/macos/ | grep -v 'latest_delivery' > expe/macos/latest_delivery
    - echo "Deliver Windows x86 expe"
    - mkdir --parents expe/win32
    - mv _editor/apps/IngeScape-Expe/build/ReleaseX86/IngeScape-Expe-*
         expe/win32/
    - ls expe/win32/ | grep -v 'latest_delivery' > expe/win32/latest_delivery
    - echo "Deliver Windows x64 expe"
    - mkdir --parents expe/win64
    - mv _editor/apps/IngeScape-Expe/build/ReleaseX64/IngeScape-Expe-*
         expe/win64/
    - ls expe/win64/ | grep -v 'latest_delivery' > expe/win64/latest_delivery
    - echo "Synchronization"
    - rsync --rsh="ssh -i ssh_secret" --recursive expe ${DELIVERY_USER}@${DELIVERY_HOST}:${DELIVERY_DESTINATION}
  dependencies:
    - expe-installer-macos-x64
    - expe-installer-windows-x86
    - expe-installer-windows-x64
