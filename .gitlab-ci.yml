# Gitlab ci

# TODO Check why with install target windows api are in bin subfolder
# TODO Check why with compile target zmq, ... are not copied in Release folder on windows
# TODO Add job to deploy ingescape website on commit (Can filter to launch job on doc folder changes and only master git's branche)
# TODO Add job to compile ingeprobe
# TODO Add job to package bindings

# Define job order
stages:
  - build-lib
  - installer-lib
  - build-apps
  - installer-apps
  - deploy-lib

# Define ingescape library files
.build-lib-files: &build-lib-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - CMakeLists.txt
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
    refs:
      - master

# Define ingescape editor files
.build-editor-files: &build-editor-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
      - editor/frameworks/**/*
      - editor/apps/IngeScape-Common/**/*
      - editor/apps/IngeScape-Editor/**/*
    refs:
      - master

# Define ingescape assessments files
.build-assessments-files: &build-assessments-files
  only:
    changes:
      - .gitlab-ci.yml
      - src/**/*
      - builds/cmake/**/*
      - dependencies/yajl/**/*
      - dependencies/unix/*
      - dependencies/windows/unix/*
      - editor/frameworks/**/*
      - editor/apps/IngeScape-Common/**/*
      - editor/apps/IngeScape-Assessments/**/*
    refs:
      - master

# Create ingescape library for linux (x86_64)
lib-linux-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-linux-release-x64"
    expire_in: 1 week
  dependencies: []
  
# Create ingescape library for linux (armv7/armhf)
#lib-linux-release-armhf:
#  <<: *build-lib-files
#  stage: build-lib
#  tags:
#    - docker
#  image: ingescape/raspbian-stretch-armhf
#  script:
#    - git clean -xfd
#    - mkdir build
#    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
#    - make -C build
#  artifacts:
#    paths:
#      - build
#    name: "lib-linux-release-armhf"
#    expire_in: 1 week
#  dependencies: []

# Create ingescape library for macos
lib-macos-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
  artifacts:
    paths:
      - build
    name: "lib-macos-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape editor for macos
editor-macos-release-x64:
  <<: *build-editor-files
  stage: build-apps
  variables:
    Qt5_DIR: ~/Qt/5.9.7/clang_64/lib/cmake/Qt5
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir editor/apps/IngeScape-Editor/build
    - cmake -S editor/apps/IngeScape-Editor/ -B editor/apps/IngeScape-Editor/build -DCMAKE_BUILD_TYPE=Release
    - make -C editor/apps/IngeScape-Editor/build
  artifacts:
    paths:
      - editor/apps/IngeScape-Editor/build
    name: "editor-macos-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape assessments for macos
assessments-macos-release-x64:
  <<: *build-assessments-files
  stage: build-apps
  variables:
    Qt5_DIR: ~/Qt/5.9.7/clang_64/lib/cmake/Qt5
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir editor/apps/IngeScape-Assessments/build
    - cmake -S editor/apps/IngeScape-Assessments/ -B editor/apps/IngeScape-Assessments/build -DCMAKE_BUILD_TYPE=Release
    - make -C editor/apps/IngeScape-Assessments/build
  artifacts:
    paths:
      - editor/apps/IngeScape-Assessments/build
    name: "assessments-macos-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 64 bits release
lib-windows-release-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\ReleaseX64
    - cmake -S . -B build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libzmq-v140-mt-4_3_1.lib"
    - cmake --build build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
     - build
    name: "lib-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 32 bits release
lib-windows-release-x86:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\ReleaseX86
    - cmake -S . -B build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libzmq-v140-mt-4_3_1.lib"
    - cmake --build build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
     - build
    name: "lib-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 64 bits debug
lib-windows-debug-x64:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Debug\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\DebugX64
    - cmake -S . -B build\DebugX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Debug -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x64\libzmq-v140-mt-gd-4_3_1.lib"
    - cmake --build build\DebugX64 --target ALL_BUILD --config Debug
  artifacts:
    paths:
     - build
    name: "lib-windows-debug-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape library for windows 32 bits debug
lib-windows-debug-x86:
  <<: *build-lib-files
  stage: build-lib
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Debug\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir build\DebugX86
    - cmake -S . -B build\DebugX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Debug -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x86\libzmq-v140-mt-gd-4_3_1.lib"
    - cmake --build build\DebugX86 --target ALL_BUILD --config Debug
  artifacts:
    paths:
     - build
    name: "lib-windows-debug-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape editor for windows
editor-windows-release-x86:
  <<: *build-editor-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015\\lib\\cmake\\Qt5
  tags:
    - windows
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Editor\build\ReleaseX86
    - cmake editor\apps\IngeScape-Editor\ -B editor\apps\IngeScape-Editor\build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release  -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libzmq-v140-mt-4_3_1.lib"
    - cmake --build editor\apps\IngeScape-Editor\build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build
    name: "editor-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape editor for windows
editor-windows-release-x64:
  <<: *build-editor-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015_64\\lib\\cmake\\Qt5
  tags:
    - windows
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Editor\build\ReleaseX64
    - cmake editor\apps\IngeScape-Editor\ -B editor\apps\IngeScape-Editor\build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release -DCMAKE_BUILD_TYPE=Release -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libzmq-v140-mt-4_3_1.lib"
    - cmake --build editor\apps\IngeScape-Editor\build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build
    name: "editor-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create ingescape assessments for windows
assessments-windows-release-x86:
  <<: *build-assessments-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015\\lib\\cmake\\Qt5
  tags:
    - windows
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x86;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Assessments\build\ReleaseX86
    - cmake editor\apps\IngeScape-Assessments\ -B editor\apps\IngeScape-Assessments\build\ReleaseX86 -G"Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=Release  -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libzmq-v140-mt-4_3_1.lib"
    - cmake --build editor\apps\IngeScape-Assessments\build\ReleaseX86 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build
    name: "assessments-windows-release-x86"
    expire_in: 1 week
  dependencies: []

# Create ingescape assessments for windows
assessments-windows-release-x64:
  <<: *build-assessments-files
  stage: build-apps
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
    Qt5_DIR: C:\\Users\\admin\\dev\\Qt\\5.9.7\\msvc2015_64\\lib\\cmake\\Qt5
  tags:
    - windows
  script:
    - set PATH=%PATH%;C:\Users\admin\dev\Builds\Release\x64;C:\Users\admin\dev\Builds
    - git clean -xfd
    - mkdir editor\apps\IngeScape-Assessments\build\ReleaseX64
    - cmake editor\apps\IngeScape-Assessments\ -B editor\apps\IngeScape-Assessments\build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release -DCMAKE_BUILD_TYPE=Release -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libzmq-v140-mt-4_3_1.lib"
    - cmake --build editor\apps\IngeScape-Assessments\build\ReleaseX64 --target ALL_BUILD --config Release
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build
    name: "assessments-windows-release-x64"
    expire_in: 1 week
  dependencies: []

# Create runtime install for windows 32 bits
lib-installer-runtime-windows-x86:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - windows
  script:
    - cd build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..
    - cd build\ReleaseX86 && cpack --config CPackSourceConfig.cmake && cd ..\..
  artifacts:
    paths:
      - build\ReleaseX86\ingescape-*.exe
      - build\ReleaseX86\ingescape-*.zip
    name: "lib-installer-runtime-windows-x86"
  dependencies:
    - lib-windows-release-x86

# Create runtime install for windows 64 bits
lib-installer-runtime-windows-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - windows
  script:
    - cd build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..
    - cd build\ReleaseX64 && cpack --config CPackSourceConfig.cmake && cd ..\..
  artifacts:
    paths:
      - build\ReleaseX64\ingescape-*.exe
      - build\ReleaseX64\ingescape-*.zip
    name: "lib-installer-runtime-windows-x64"
  dependencies:
    - lib-windows-release-x64

# Create runtime install for macos 64 bits
lib-installer-runtime-macos-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - osx
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i '' 's/DARWIN_PACKAGE_FILE_NAME=.*/DARWIN_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
  artifacts:
    paths:
      - build/ingescape-*
      - build/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-macos-x64"
  dependencies:
    - lib-macos-release-x64

# Create editor install for macos 64 bits
editor-installer-macos-x64:
  <<: *build-editor-files
  stage: installer-apps
  tags:
    - osx
  script:
    - make -C editor/apps/IngeScape-Editor/build package
  #  - make -C editor/apps/IngeScape-Editor/build package_source
  artifacts:
    paths:
      - editor/apps/IngeScape-Editor/build/IngeScape-Editor-*
    name: "editor-installer-macos-x64"
  dependencies:
    - editor-macos-release-x64

# Create editor install for windows 32 bits
editor-installer-windows-x86:
  <<: *build-editor-files
  stage: installer-apps
  tags:
    - windows
  script:
    - cd editor\apps\IngeScape-Editor\build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build\ReleaseX86\IngeScape-Editor-*
    name: "editor-installer-windows-x86"
  dependencies:
    - editor-windows-release-x86

# Create editor install for windows 64 bits
editor-installer-windows-x64:
  <<: *build-editor-files
  stage: installer-apps
  tags:
    - windows
  script:
    - cd editor\apps\IngeScape-Editor\build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Editor\build\ReleaseX64\IngeScape-Editor-*
    name: "editor-installer-windows-x64"
  dependencies:
    - editor-windows-release-x64

# Create assessments install for macos 64 bits
assessments-installer-macos-x64:
  <<: *build-assessments-files
  stage: installer-apps
  tags:
    - osx
  script:
    - make -C editor/apps/IngeScape-Assessments/build package
  #  - make -C editor/apps/IngeScape-Assessments/build package_source
  artifacts:
    paths:
      - editor/apps/IngeScape-Assessments/build/IngeScape-Assessments-*
    name: "assessments-installer-macos-x64"
  dependencies:
    - assessments-macos-release-x64

# Create assessments install for windows 32 bits
assessments-installer-windows-x86:
  <<: *build-assessments-files
  stage: installer-apps
  tags:
    - windows
  script:
    - cd editor\apps\IngeScape-Assessments\build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build\ReleaseX86\IngeScape-Assessments-*
    name: "assessments-installer-windows-x86"
  dependencies:
    - assessments-windows-release-x86

# Create assessments install for windows 64 bits
assessments-installer-windows-x64:
  <<: *build-assessments-files
  stage: installer-apps
  tags:
    - windows
  script:
    - cd editor\apps\IngeScape-Assessments\build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..\..\..\..
  artifacts:
    paths:
      - editor\apps\IngeScape-Assessments\build\ReleaseX64\IngeScape-Assessments-*
    name: "assessments-installer-windows-x64"
  dependencies:
    - assessments-windows-release-x64

# Create runtime install for linux 64 bits - Generic ZIP
lib-installer-runtime-linux-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
  artifacts:
    paths:
      - build/ingescape-*
      - build/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-linux-x64"
  dependencies:
    - lib-linux-release-x64

# Create runtime install for linux 64 bits - Debian 9 (stretch)
lib-installer-runtime-debian-9-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DLINUX_FLAVOR="Debian 9 (stretch)"
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
  artifacts:
    paths:
      - build/ingescape-*
      - build/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-debian-9-x64"
  dependencies:
    - lib-linux-release-x64

# Create runtime install for linux 64 bits - Debian 10 (buster)
lib-installer-runtime-debian-10-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DLINUX_FLAVOR="Debian 10 (buster)"
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
  artifacts:
    paths:
      - build/ingescape-*
      - build/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-debian-10-x64"
  dependencies:
    - lib-linux-release-x64

# Create runtime install for linux 64 bits - CentOS
lib-installer-runtime-centos-x64:
  <<: *build-lib-files
  stage: installer-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DLINUX_FLAVOR="CentOS"
    - make -C build package
    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
  artifacts:
    paths:
      - build/ingescape-*
      - build/installIngescapeAndDependencies.sh
    name: "lib-installer-runtime-centos-x64"
  dependencies:
    - lib-linux-release-x64

# Create runtime install for linux ARMv7 (armhf) - Generic ZIP
#lib-installer-runtime-linux-armhf:
#  <<: *build-lib-files
#  stage: installer-lib
#  tags:
#    - docker
#  image: ingescape/raspbian-stretch-armhf
#  script:
#    - make -C build package
#    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
#    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
#  artifacts:
#    paths:
#      - build/ingescape-*
#      - build/installIngescapeAndDependencies.sh
#    name: "lib-installer-runtime-linux-armhf"
#  dependencies:
#    - lib-linux-release-armhf

# Create runtime install for linux ARMv7 (armhf) - Raspbian 9 (stretch)
#lib-installer-runtime-raspbian-9-armhf:
#  <<: *build-lib-files
#  stage: installer-lib
#  tags:
#    - docker
#  image: ingescape/raspbian-stretch-armhf
#  script:
#    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DLINUX_FLAVOR="Raspbian 9 (stretch)"
#    - make -C build package
#    - cp dependencies/unix/installIngescapeAndDependencies.sh build/installIngescapeAndDependencies.sh
#    - sed -i 's/LINUX_PACKAGE_FILE_NAME=.*/LINUX_PACKAGE_FILE_NAME="'$(ls -l build/ | grep ingescape- | rev | cut -d' ' -f 1 | cut -d'.' -f2- | rev | uniq)'"/' build/installIngescapeAndDependencies.sh
#  artifacts:
#    paths:
#      - build/ingescape-*
#      - build/installIngescapeAndDependencies.sh
#    name: "lib-installer-runtime-raspbian-9-armhf"
#  dependencies:
#    - lib-linux-release-armhf

# Deploy ingescape in mac os X to be able to compile agents
lib-deploy-macos-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - osx
  script:
    - make -C build install DESTDIR=~/builds/release/x64
    - cp src/include/ingescape_private.h ~/builds/release/x64/usr/local/include/ingescape/
  dependencies:
    - lib-macos-release-x64

# Deploy ingescape in linux to be able to compile agents
lib-deploy-linux-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - docker
  image: ingescape/debian-with-zyre
  script:
    - make -C build install DESTDIR=~/builds/release/x64
    - cp src/include/ingescape_private.h ~/builds/release/x64/usr/local/include/ingescape/
  dependencies:
    - lib-linux-release-x64

# Deploy ingescape in linux to be able to compile agents
#lib-deploy-linux-release-armhf:
#  <<: *build-lib-files
#  stage: deploy-lib
#  tags:
#    - docker
#  image: ingescape/raspbian-stretch-armhf
#  script:
#    - make -C build install DESTDIR=~/builds/release/armhf
#    - cp src/include/ingescape_private.h ~/builds/release/armhf/usr/local/include/ingescape/
#  dependencies:
#    - lib-linux-release-armhf

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-release-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\ReleaseX64\Release\* C:\Users\admin\dev\Builds\Release\x64\
  dependencies:
    - lib-windows-release-x64

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-release-x86:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\ReleaseX86\Release\* C:\Users\admin\dev\Builds\Release\x86\
  dependencies:
    - lib-windows-release-x86

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-debug-x64:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\DebugX64\Debug\* C:\Users\admin\dev\Builds\Debug\x64\
  dependencies:
    - lib-windows-debug-x64

# Deploy ingescape in windows to be able to compile agents
lib-deploy-windows-debug-x86:
  <<: *build-lib-files
  stage: deploy-lib
  tags:
    - windows
  script:
    - copy /y src\include\*.h C:\Users\admin\dev\Builds\include\ingescape\
    - copy /y build\DebugX86\Debug\* C:\Users\admin\dev\Builds\Debug\x86\
  dependencies:
    - lib-windows-debug-x86
