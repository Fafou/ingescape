# Gitlab ci

# Define job order
stages:
  - linux
  - windows
  - installer

# Define default condition to launch job
.default-conditions: &default-conditions
  only:
    #- master # Remove now to test build on windows vm with gitlab
    changes:
      - CMakeLists.txt

# Define ingescape library files
.build-ingescape-files: &build-ingescape-files
  <<: *default-conditions
  only:
    changes:
      - src/**/*
      - autogen.sh
      - configure.ac
      - Makefile.am

# Define ingescape windows installer files
.build-ingescape-installer-windows: &build-ingescape-installer-windows
  <<: *default-conditions
  only:
    changes:
      - packaging/windows/*

# Define ingescape redhat installer files
.build-ingescape-installer-redhat: &build-ingescape-installer-redhat
  <<: *default-conditions
  only:
    changes:
      - packaging/redhat/*

# Define ingescape debian installer files
.build-ingescape-installer-debian: &build-ingescape-installer-debian
  <<: *default-conditions
  only:
    changes:
      - packaging/debian/*

# Create ingescape library for linux
linux-release-x64:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-redhat
  <<: *build-ingescape-installer-debian
  stage: linux
  tags:
    - docker
  image: fafesty/debian-with-zyre
  script:
    - git clean -xfd
    - mkdir build
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - make -C build
    - mkdir linux-release-x64
    - cp -d build/libingescape.* linux-release-x64/
  artifacts:
    paths:
      - linux-release-x64
    expire_in: 1 week

# Create ingescape library for windows 64 bits release
win32-release-x64:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-windows
  stage: windows
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - git clean -xfd
    - mkdir build\ReleaseX64
    - cmake -S . -B build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DLIBSODIUM_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libsodium.lib" -DLIBSODIUM_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libzmq-v140-mt-4_3_1.lib" -DLIBZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DCZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\czmq.lib" -DCZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DZYRE_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\zyre.lib" -DZYRE_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DYAJL_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\yajl.lib" -DYAJL_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include"
    - cmake --build build\ReleaseX64 --target ALL_BUILD --config Release
    - mkdir win32-release-x64
    - copy build\ReleaseX64\Release\* win32-release-x64\
  artifacts:
    paths:
     - win32-release-x64
    expire_in: 1 week

# Create ingescape library for windows 32 bits release
win32-release-x86:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-windows
  stage: windows
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - git clean -xfd
    - mkdir build\ReleaseX86
    - cmake -S . -B build\ReleaseX86 -G"Visual Studio 14 2015" -DLIBSODIUM_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libsodium.lib" -DLIBSODIUM_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libzmq-v140-mt-4_3_1.lib" -DLIBZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DCZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\czmq.lib" -DCZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DZYRE_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\zyre.lib" -DZYRE_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DYAJL_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\yajl.lib" -DYAJL_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include"
    - cmake --build build\ReleaseX86 --target ALL_BUILD --config Release
    - mkdir win32-release-x86
    - copy build\ReleaseX86\Release\* win32-release-x86\
  artifacts:
    paths:
     - win32-release-x86
    expire_in: 1 week

# Create ingescape library for windows 64 bits debug
win32-debug-x64:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-windows
  stage: windows
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - git clean -xfd
    - mkdir build\DebugX64
    - cmake -S . -B build\DebugX64 -G"Visual Studio 14 2015 Win64" -DLIBSODIUM_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x64\libsodium.lib" -DLIBSODIUM_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x64\libzmq-v140-mt-gd-4_3_1.lib" -DLIBZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DCZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x64\czmq.lib" -DCZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DZYRE_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x64\zyre.lib" -DZYRE_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DYAJL_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x64\yajl.lib" -DYAJL_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include"
    - cmake --build build\DebugX64 --target ALL_BUILD --config Debug
    - mkdir win32-debug-x64
    - copy build\DebugX64\Debug\*.exp win32-debug-x64\
    - copy build\DebugX64\Debug\*.lib win32-debug-x64\
    - copy build\DebugX64\Debug\*.dll win32-debug-x64\
    - copy build\DebugX64\Debug\*.pdb win32-debug-x64\
  artifacts:
    paths:
     - win32-debug-x64
    expire_in: 1 week

# Create ingescape library for windows 32 bits debug
win32-debug-x86:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-windows
  stage: windows
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - git clean -xfd
    - mkdir build\DebugX86
    - cmake -S . -B build\DebugX86 -G"Visual Studio 14 2015" -DLIBSODIUM_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x86\libsodium.lib" -DLIBSODIUM_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x86\libzmq-v140-mt-gd-4_3_1.lib" -DLIBZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DCZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x86\czmq.lib" -DCZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DZYRE_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x86\zyre.lib" -DZYRE_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DYAJL_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Debug\x86\yajl.lib" -DYAJL_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include"
    - cmake --build build\DebugX86 --target ALL_BUILD --config Debug
    - mkdir win32-debug-x86
    - copy build\DebugX86\Debug\*.exp win32-debug-x86\
    - copy build\DebugX86\Debug\*.lib win32-debug-x86\
    - copy build\DebugX86\Debug\*.dll win32-debug-x86\
    - copy build\DebugX86\Debug\*.pdb win32-debug-x86\
  artifacts:
    paths:
     - win32-debug-x86
    expire_in: 1 week

# Create runtime install for windows 32 bits
installer-runtime-win32-x86:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-windows
  stage: installer
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - git clean -xfd
    - mkdir build\ReleaseX86
    - cmake -S . -B build\ReleaseX86 -G"Visual Studio 14 2015" -DLIBSODIUM_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libsodium.lib" -DLIBSODIUM_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\libzmq-v140-mt-4_3_1.lib" -DLIBZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DCZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\czmq.lib" -DCZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DZYRE_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\zyre.lib" -DZYRE_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DYAJL_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x86\yajl.lib" -DYAJL_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include"
    - cmake --build build\ReleaseX86 --target ALL_BUILD --config Release
    - cd build\ReleaseX86 && cpack --config CPackConfig.cmake && cd ..\..
    - cd build\ReleaseX86 && cpack --config CPackSourceConfig.cmake && cd ..\..
  artifacts:
    paths:
      - build\ReleaseX86\Ingescape-*.exe
      - build\ReleaseX86\Ingescape-*.zip

# Create runtime install for windows 64 bits
installer-runtime-win32-x64:
  <<: *build-ingescape-files
  <<: *build-ingescape-installer-windows
  stage: installer
  tags:
    - windows
  variables:
    DEPENDENCIES_BUILDS_ROOT: "C:\\Users\\admin\\dev\\Builds"
  script:
    - git clean -xfd
    - mkdir build\ReleaseX64
    - cmake -S . -B build\ReleaseX64 -G"Visual Studio 14 2015 Win64" -DLIBSODIUM_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libsodium.lib" -DLIBSODIUM_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DLIBZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\libzmq-v140-mt-4_3_1.lib" -DLIBZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DCZMQ_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\czmq.lib" -DCZMQ_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DZYRE_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\zyre.lib" -DZYRE_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include" -DYAJL_LIBRARIES="%DEPENDENCIES_BUILDS_ROOT%\Release\x64\yajl.lib" -DYAJL_INCLUDE_DIRS="%DEPENDENCIES_BUILDS_ROOT%\include"
    - cmake --build build\ReleaseX64 --target ALL_BUILD --config Release
    - cd build\ReleaseX64 && cpack --config CPackConfig.cmake && cd ..\..
    - cd build\ReleaseX64 && cpack --config CPackSourceConfig.cmake && cd ..\..
  artifacts:
    paths:
      - build\ReleaseX64\Ingescape-*.exe
      - build\ReleaseX64\Ingescape-*.zip

# # Create sdk install for windows
# installer-sdk:
#   <<: *build-ingescape-files
#   <<: *build-ingescape-installer-windows
#   stage: installer
#   image: fafesty/compile-with-zyre
#   script:
#    - apt-get update
#    - apt-get install -y nsis
#    - makensis packaging/windows/ingescape-sdk.nsi
#    - mv packaging/windows/Ingescape-Sdk-Installer.exe ./
#   dependencies:
#    - win32-x86_64
#    - win32-i686
#   artifacts:
#     paths:
#       - Ingescape-Sdk-Installer.exe

# installer-redhat:
#   <<: *build-ingescape-files
#   <<: *build-ingescape-installer-redhat
#   stage: installer
#   image: fafesty/compile-with-zyre
#   script:
#    - apt-get update
#    - apt-get install -y rpm
#    - mkdir -p $HOME/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
#    - ln -s packaging/redhat/rpmmacros $HOME/.rpmmacros
#    - touch $HOME/rpmbuild/SOURCES/empty
#    - VERSION=$(builds/m4-scripts/gen-ingescape-version src/admin.c); INGESCAPE_SOURCE=$(pwd); rpmbuild -ba --define "_VERSION_I $VERSION" --define "_INGESCAPE_SOURCE $INGESCAPE_SOURCE" packaging/redhat/libingescape.spec
#    - mkdir redhat-x86_64
#    - mv /root/rpmbuild/RPMS/x86_64/* redhat-x86_64/
#   dependencies:
#     - linux-x86
#   artifacts:
#     paths:
#       - redhat-x86_64

# installer-debian:
#   <<: *build-ingescape-files
#   <<: *build-ingescape-installer-debian
#   stage: installer
#   image: fafesty/compile-with-zyre
#   script:
#    - apt-get update
#    - apt-get install -y devscripts build-essential
#    - cd packaging && debuild -us -uc --build=binary && cd -
#    - mkdir debian-x86_64
#    - mv libingescape*.deb debian-x86_64/
#   dependencies:
#     - linux-x86
#   artifacts:
#     paths:
#       - debian-x86_64

# TODO Add job to compile on cyclone and generate macos installer
# TODO Add job to deploy ingescape website on commit (Can filter to launch job on doc folder changes and only master git's branche)
# TODO Add job to compile editor
# TODO Add job to compile ingeprob
# TODO Add job to package bindings
