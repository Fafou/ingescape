/*
 *	IngeScape Common
 *
 *  Copyright Â© 2019 Ingenuity i/o. All rights reserved.
 *
 *	See license terms for the rights and conditions
 *	defined by copyright holders.
 *
 *
 *	Contributors:
 *      Alexandre Lemort   <lemort@ingenuity.io>
 *
 */

#ifndef MICROSOFTWINDOWUTILS_H
#define MICROSOFTWINDOWUTILS_H

#include <QtGlobal>
#include <QObject>
#include <QAbstractNativeEventFilter>


#include "osutils.h"


#ifdef Q_OS_WIN
//
// Microsoft window definition
//


class MicrosoftWindowUtilsEventFilter: public QAbstractNativeEventFilter
{
public:
    /**
     * @brief Constructor
     */
    MicrosoftWindowUtilsEventFilter();


    /**
     * @brief This method is called for every native event
     * @param eventType
     * @param message
     * @param result
     * @return
     */
    bool nativeEventFilter(const QByteArray &eventType, void *message, long *result) Q_DECL_OVERRIDE;
};



/**
 * @brief The MicrosoftWindowUtils class defines a set of utility functions to perform Windows specific operations
 */
class MicrosoftWindowUtils : public OSUtils
{
    Q_OBJECT

public:
    /**
     * @brief Constructor
     */
    explicit MicrosoftWindowUtils(QObject *parent = nullptr);


    /**
     * @brief Destructor
     */
    ~MicrosoftWindowUtils() Q_DECL_OVERRIDE;


#ifndef OSUTILS_NO_QML
    /**
     * @brief Override the setter of our currentWindow property
     * @param value
     * @return
     */
    bool setcurrentWindow (QQuickWindow* value) Q_DECL_OVERRIDE;

#endif


    /**
     * @brief Get our singleton instance
     * @return
     */
    static MicrosoftWindowUtils* instance();


    /**
     * @brief Remove all menu items generated by Qt to handle conventions
     */
    void removeOSGeneratedMenuItems() Q_DECL_OVERRIDE;


protected:
    /**
     * @brief Enable energy efficiency features
     */
    void _enableEnergyEfficiencyFeatures() Q_DECL_OVERRIDE;


    /**
     * @brief Disable energy efficiency features
     */
    void _disableEnergyEfficiencyFeatures() Q_DECL_OVERRIDE;


#ifndef OSUTILS_NO_QML
    /**
     * @brief Subscribe to user session notifications
     */
    void _subscribeToUserSessionNotifications(QQuickWindow* window);


    /**
     * @brief Unsubscribe to user session notifications
     */
    void _unsubscribeToUserSessionNotifications(QQuickWindow* window);
#endif



protected:
    // Event filter
    MicrosoftWindowUtilsEventFilter* _eventFilter;
};


#else
//
// Non-Window definition
//
class MicrosoftWindowUtils : public OSUtils
{
    Q_OBJECT

public:
    /**
     * @brief Constructor
     */
    explicit MicrosoftWindowUtils(QObject *parent = nullptr);

};


#endif


#endif // MICROSOFTWINDOWUTILS_H
