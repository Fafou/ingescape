import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable MasticQuick 1.0 .'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "AbstractMasticQuickEnumClass"
        prototype: "QObject"
        Method {
            name: "enumToString"
            type: "string"
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "enumToKey"
            type: "string"
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "enumFromKey"
            type: "int"
            Parameter { name: "key"; type: "string" }
        }
        Method { name: "allKeys"; type: "QStringList" }
    }
    Component {
        name: "MasticIopType"
        prototype: "AbstractMasticQuickEnumClass"
        exports: ["MasticQuick/MasticIopType 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Value"
            values: {
                "INVALID": 0,
                "INTEGER": 1,
                "DOUBLE": 2,
                "STRING": 3,
                "BOOLEAN": 4,
                "IMPULSION": 5,
                "DATA": 6
            }
        }
        Method {
            name: "enumToString"
            type: "string"
            Parameter { name: "value"; type: "int" }
        }
        Method { name: "allValues"; type: "QList<MasticIopType::Value>" }
    }
    Component {
        name: "MasticLogLevel"
        prototype: "AbstractMasticQuickEnumClass"
        exports: ["MasticQuick/MasticLogLevel 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Value"
            values: {
                "LOG_TRACE": 0,
                "LOG_DEBUG": 1,
                "LOG_INFO": 2,
                "LOG_WARN": 3,
                "LOG_ERROR": 4,
                "LOG_FATAL": 5
            }
        }
        Method {
            name: "enumToString"
            type: "string"
            Parameter { name: "value"; type: "int" }
        }
        Method { name: "allValues"; type: "QList<MasticLogLevel::Value>" }
    }
    Component {
        name: "MasticQuick"
        prototype: "QObject"
        exports: ["MasticQuick/Mastic 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "version"; type: "int"; isReadonly: true }
        Property { name: "versionString"; type: "string"; isReadonly: true }
        Property { name: "agentName"; type: "string" }
        Property { name: "agentState"; type: "string" }
        Property { name: "definitionName"; type: "string" }
        Property { name: "definitionVersion"; type: "string" }
        Property { name: "definitionDescription"; type: "string" }
        Property { name: "isMuted"; type: "bool" }
        Property { name: "isFrozen"; type: "bool" }
        Property { name: "canBeFrozen"; type: "bool" }
        Property { name: "isStarted"; type: "bool"; isReadonly: true }
        Property { name: "requestOutputsFromMappedAgents"; type: "bool" }
        Property { name: "isVerbose"; type: "bool" }
        Property { name: "logStream"; type: "bool" }
        Property { name: "logInFile"; type: "bool" }
        Property { name: "useColorVerbose"; type: "bool" }
        Property { name: "logPath"; type: "string" }
        Property { name: "logLevel"; type: "MasticLogLevel::Value" }
        Property { name: "inputsList"; type: "QStringList"; isReadonly: true }
        Property { name: "outputsList"; type: "QStringList"; isReadonly: true }
        Property { name: "parametersList"; type: "QStringList"; isReadonly: true }
        Property { name: "inputs"; type: "QQmlPropertyMap"; isReadonly: true; isPointer: true }
        Property { name: "outputs"; type: "QQmlPropertyMap"; isReadonly: true; isPointer: true }
        Property { name: "parameters"; type: "QQmlPropertyMap"; isReadonly: true; isPointer: true }
        Signal {
            name: "versionChanged"
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "versionStringChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "agentNameChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "agentStateChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "definitionNameChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "definitionVersionChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "definitionDescriptionChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "isMutedChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "isFrozenChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "canBeFrozenChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "isStartedChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "requestOutputsFromMappedAgentsChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "isVerboseChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "logStreamChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "logInFileChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "useColorVerboseChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "logPathChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "logLevelChanged"
            Parameter { name: "value"; type: "MasticLogLevel::Value" }
        }
        Signal {
            name: "inputsListChanged"
            Parameter { name: "value"; type: "QStringList" }
        }
        Signal {
            name: "outputsListChanged"
            Parameter { name: "value"; type: "QStringList" }
        }
        Signal {
            name: "parametersListChanged"
            Parameter { name: "value"; type: "QStringList" }
        }
        Signal {
            name: "inputsChanged"
            Parameter { name: "value"; type: "QQmlPropertyMap"; isPointer: true }
        }
        Signal {
            name: "outputsChanged"
            Parameter { name: "value"; type: "QQmlPropertyMap"; isPointer: true }
        }
        Signal {
            name: "parametersChanged"
            Parameter { name: "value"; type: "QQmlPropertyMap"; isPointer: true }
        }
        Signal { name: "forcedStop" }
        Signal {
            name: "observeInput"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "observeOutput"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "observeParameter"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "startWithDevice"
            type: "bool"
            Parameter { name: "networkDevice"; type: "string" }
            Parameter { name: "port"; type: "int" }
        }
        Method {
            name: "startWithDevice"
            type: "bool"
            Parameter { name: "networkDevice"; type: "string" }
        }
        Method {
            name: "startWithIP"
            type: "bool"
            Parameter { name: "ipAddress"; type: "string" }
            Parameter { name: "port"; type: "int" }
        }
        Method {
            name: "startWithIP"
            type: "bool"
            Parameter { name: "ipAddress"; type: "string" }
        }
        Method { name: "stop"; type: "bool" }
        Method {
            name: "writeOutputAsInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "writeOutputAsDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "writeOutputAsString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "writeOutputAsBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "writeOutputAsImpulsion"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "writeOutputAsData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
        }
        Method {
            name: "writeParameterAsInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "writeParameterAsDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "writeParameterAsString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "writeParameterAsBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "writeParameterAsData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
        }
        Method {
            name: "getTypeForInput"
            type: "MasticIopType::Value"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "getTypeForOutput"
            type: "MasticIopType::Value"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "getTypeForParameter"
            type: "MasticIopType::Value"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "checkInputExistence"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "checkOutputExistence"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "checkParameterExistence"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "muteOuput"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "unmuteOuput"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "isOutputMuted"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "qmlUpdateExtraParameter"; type: "QVariant" }
        }
        Method {
            name: "isOutputMuted"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createInputInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createInputInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "createInputInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createInputDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createInputDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "createInputDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createInputString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createInputString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "createInputString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createInputBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createInputBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "createInputBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createInputImpulsion"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createInputImpulsion"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createInputData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createInputData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
        }
        Method {
            name: "createInputData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createOutputInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createOutputInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "createOutputInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createOutputDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createOutputDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "createOutputDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createOutputString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createOutputString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "createOutputString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createOutputBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createOutputBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "createOutputBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createOutputImpulsion"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createOutputImpulsion"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createOutputData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createOutputData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
        }
        Method {
            name: "createOutputData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createParameterInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createParameterInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "createParameterInt"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createParameterDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createParameterDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "createParameterDouble"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createParameterString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createParameterString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "createParameterString"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createParameterBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createParameterBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "createParameterBool"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createParameterData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
            Parameter { name: "warning"; type: "string"; isPointer: true }
        }
        Method {
            name: "createParameterData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "void"; isPointer: true }
        }
        Method {
            name: "createParameterData"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "removeInput"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "removeOutput"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "removeParameter"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "getNetdevicesList"
            type: "QStringList"
            Parameter { name: "qmlUpdateExtraParameter"; type: "QVariant" }
        }
        Method { name: "getNetdevicesList"; type: "QStringList" }
        Method {
            name: "log"
            Parameter { name: "logLevel"; type: "MasticLogLevel::Value" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "trace"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "debug"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "info"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "warn"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "error"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "fatal"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "checkIfIopNameIsValid"
            type: "bool"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "MasticQuickAbstractIOPBinding"
        prototype: "QObject"
        Property { name: "target"; type: "QObject"; isPointer: true }
        Property { name: "properties"; type: "string" }
        Property { name: "when"; type: "bool" }
        Property { name: "removeOnUpdatesAndDestruction"; type: "bool" }
        Signal {
            name: "targetChanged"
            Parameter { name: "value"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "propertiesChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "whenChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "removeOnUpdatesAndDestructionChanged"
            Parameter { name: "value"; type: "bool" }
        }
    }
    Component {
        name: "MasticQuickBindingSingleton"
        prototype: "QObject"
        exports: ["MasticQuick/MasticBinding 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "AllProperties"; type: "string"; isReadonly: true }
        Property { name: "AllSignalHandlers"; type: "string"; isReadonly: true }
        Property { name: "None"; type: "string"; isReadonly: true }
    }
    Component {
        name: "MasticQuickInputBinding"
        prototype: "MasticQuickAbstractIOPBinding"
        exports: ["MasticQuick/MasticInputBinding 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "inputsPrefix"; type: "string" }
        Property { name: "inputsSuffix"; type: "string" }
        Property { name: "inputName"; type: "string" }
        Signal {
            name: "inputsPrefixChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "inputsSuffixChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "inputNameChanged"
            Parameter { name: "value"; type: "string" }
        }
    }
    Component {
        name: "MasticQuickInputsPropertyMap"
        prototype: "QQmlPropertyMap"
        exports: ["MasticQuick/MasticQuickInputsPropertyMap 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "MasticQuickOutputBinding"
        prototype: "MasticQuickAbstractIOPBinding"
        exports: ["MasticQuick/MasticOutputBinding 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "outputsPrefix"; type: "string" }
        Property { name: "outputsSuffix"; type: "string" }
        Property { name: "outputName"; type: "string" }
        Property { name: "signalHandlers"; type: "string" }
        Signal {
            name: "outputsPrefixChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "outputsSuffixChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "outputNameChanged"
            Parameter { name: "value"; type: "string" }
        }
        Signal {
            name: "signalHandlersChanged"
            Parameter { name: "value"; type: "string" }
        }
    }
    Component {
        name: "MasticQuickOutputsPropertyMap"
        prototype: "QQmlPropertyMap"
        exports: ["MasticQuick/MasticQuickOutputsPropertyMap 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "MasticQuickParametersPropertyMap"
        prototype: "QQmlPropertyMap"
        exports: ["MasticQuick/MasticQuickParametersPropertyMap 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQmlPropertyMap"
        prototype: "QObject"
        Signal {
            name: "valueChanged"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "keys"; type: "QStringList" }
    }
}
